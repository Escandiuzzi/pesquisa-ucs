---
import Button from "../../components/Button.astro";
import Container from "../../components/Container.astro";
import Default from "../../layouts/Default.astro";
import Select from "../../components/Select.astro";
import { db } from "../../db";
import {
  productions,
  projects,
  areas,
  researchers,
  researchersToProductions,
} from "../../db/schema";
import { formatDate } from "../../lib/dateFormater";
import { eq } from "drizzle-orm";
import { getAreasFlat } from "../../models/area";

const areasList = await getAreasFlat();

const productionsEntries = await db
  .select({
    production: {
      id: productions.id,
      title: productions.title,
      pubDate: productions.pubDate,
      links: productions.links,
    },
    project: {
      title: projects.title,
    },
    area: {
      id: areas.id,
      name: areas.name,
    },
    researchers: {
      name: researchers.name,
    },
  })
  .from(productions)
  .leftJoin(projects, eq(productions.projectId, projects.id))
  .leftJoin(areas, eq(productions.areaId, areas.id))
  .leftJoin(
    researchersToProductions,
    eq(researchersToProductions.productionId, productions.id)
  )
  .leftJoin(
    researchers,
    eq(researchersToProductions.researcherId, researchers.id)
  );
---

<Default title="Produções">
  <main>
    <Container class="py-6">
      <div class="flex justify-between">
        <h2 class="text-2xl font-bold">Produções</h2>
        <div class="flex items-center">
          <a href="/producoes/criar" class="group">
            <Button><span class="text-xl leading-none">+</span>Criar</Button>
          </a>
        </div>
      </div>
    </Container>
    <Container class="py-6">
      <div class="flex">
        <input
          type="text"
          id="search-input"
          class="w-72 p-2 border rounded"
          placeholder="Pesquise uma produção por título..."
        />
        <Select id="selector" name="area" class="w-28 ml-4">
          <option value="">Todas</option>
          {
            areasList.map((area) => (
              <option value={area.id}>{area.name}</option>
            ))
          }
        </Select>
      </div>
    </Container>
    <Container class="flex flex-col items-center justify-center">
      <ul class="w-full max-w-2xl">
        {
          productionsEntries.map((data) => (
            <li
              class="bg-white shadow-md rounded-lg p-6 mb-4 production-item"
              data-title={data?.production.title?.toLowerCase()}
              data-area={data?.area?.id}
              onclick={`window.location.href='/producoes/${data.production.id}'`}
            >
              <h3 class="text-xl font-semibold">{data.production.title}</h3>
              <h3 class="text-l font-normal">{data.project?.title}</h3>
              <h3 class="text-l mt-3">{data.area?.name}</h3>
              <div class="flex text-sm font-bold text-gray-600 justify-end">
                {formatDate(data.production.pubDate as string)}
              </div>
              <div class="mt-4 flex justify-end space-x-2">
                <button
                  class="bg-yellow-500 text-white py-2 px-4 rounded hover:bg-yellow-600 focus:outline-none"
                  onclick={`window.location.href='/projetos/${data.production.id}/edit'`}
                >
                  Edit
                </button>
                <button
                  class="bg-red-500 text-white py-2 px-4 rounded hover:bg-red-600 focus:outline-none"
                  onclick={`window.location.href='/projetos/${data.production.id}/delete'`}
                >
                  Delete
                </button>
              </div>
            </li>
          ))
        }
      </ul>
    </Container>
  </main>
</Default>
<script>
  const input = document.getElementById("search-input") as HTMLInputElement;
  const selector = document.getElementById("selector") as HTMLInputElement;

  selector?.addEventListener("change", () => {
    const selectedValue = selector?.value;
    const productions = document.querySelectorAll(".production-item");

    productions.forEach((production) => {
      const area = production.getAttribute("data-area");

      console.log(area, selectedValue);

      if (area === selectedValue || selectedValue === "") {
        (production as HTMLElement).style.display = "";
      } else {
        (production as HTMLElement).style.display = "none";
      }
    });
  });

  input?.addEventListener("input", () => {
    const filter = input?.value.toLowerCase();
    const projects = document.querySelectorAll(".production-item");

    projects.forEach((production) => {
      const title = production.getAttribute("data-title");
      if (title?.includes(filter)) {
        (production as HTMLElement).style.display = "";
      } else {
        (production as HTMLElement).style.display = "none";
      }
    });
  });
</script>
